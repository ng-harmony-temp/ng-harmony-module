{"version":3,"sources":["../index.js"],"names":[],"mappings":"AAAI,OAAO,OAAP,MAAoB,SAApB;AACA,OAAO,MAAP,MAAmB,mBAAnB;;AAEA,OAAO,MAAM,MAAN,CAAa;AAChB,gBAAY,IAAZ,EAAkB,YAAlB,EAAgC,MAAhC,EAAwC;AACpC,aAAK,IAAL,GAAY,IAAZ,CADoC;AAEpC,aAAK,YAAL,GAAoB,gBAAgB,EAAhB,CAFgB;AAGpC,aAAK,YAAL,CAAkB,IAAlB,CAAuB,WAAvB,EAHoC;AAIpC,gBAAQ,MAAR,CAAe,IAAf,EAAqB,YAArB,EAJoC;AAKpC,YAAI,OAAO,MAAP,KAAkB,WAAlB,IAAiC,WAAW,IAAX,EAAiB;AACrD,iBAAK,OAAL,CAAa,MAAb,EADqD;SAAtD;KALJ;AASA,QAAI,MAAJ,GAAa;AACT,eAAO,QAAQ,MAAR,CAAe,KAAK,IAAL,CAAtB,CADS;KAAb;AAGA,gBAAY;AACR,gBAAQ,OAAR,CAAgB,QAAhB,EAA0B,KAA1B,CAAgC,MAAM;AAClC,oBAAQ,SAAR,CAAkB,QAAlB,EAA4B,CAAC,KAAK,IAAL,CAA7B,EADkC;SAAN,CAAhC,CADQ;KAAZ;AAKA,YAAQ,MAAR,EAAgB;AACZ,aAAK,MAAL,GAAc,MAAd,CADY;AAEZ,aAAK,MAAL,CAAY,CAAC,cAAD,EAAiB,kBAAjB,KAAwC;AAChD,gBAAI,OAAO,OAAO,OAAP,KAAmB,WAA1B,IAAyC,OAAO,OAAP,KAAmB,IAAnB,EAAyB;AAClE,mCAAmB,SAAnB,CAA6B,OAAO,OAAP,CAA7B,CADkE;aAAtE;AAGA,iBAAK,IAAI,CAAC,CAAD,EAAI,KAAJ,CAAJ,IAAkB,OAAO,IAAP,CAAY,MAAZ,EAAoB,OAApB,EAAvB,EAAsD;AAClD,oBAAI,UAAU,SAAV,EAAqB;AAAE,6BAAF;iBAAzB;AACA,+BAAe,KAAf,CAAqB,KAArB,EAA4B,OAAO,KAAP,CAA5B,EAFkD;aAAtD;SAJQ,CAAZ,CAFY;KAAhB;AAYA,WAAO,GAAP,EAAY;AACR,YAAI,OAAO,KAAK,MAAL,KAAgB,YAAvB,IAAuC,KAAK,MAAL,KAAgB,IAAhB,EAAsB;AAC7D,kBAAM,kCAAN,CAD6D;SAAjE;AAGA,aAAK,MAAL,CAAY,MAAZ,CAAmB,GAAnB,EAJQ;KAAZ;CA9BG","file":"common_module.js","sourcesContent":["    import angular from \"angular\";\n    import router from \"angular-ui-router\";\n\n    export class Module {\n        constructor(name, dependencies, routes) {\n            this.name = name;\n            this.dependencies = dependencies || [];\n            this.dependencies.push(\"ui.router\");\n            angular.module(name, dependencies);\n            if (typeof routes !== \"undefined\" && routes !== null) {\n            \tthis.routing(routes);\n            }\n        }\n        get module() {\n            return angular.module(this.name);\n        }\n        bootstrap() {\n            angular.element(document).ready(() => {\n                angular.bootstrap(document, [this.name]);\n            });\n        }\n        routing(routes) {\n            this.routes = routes;\n            this.config(($stateProvider, $urlRouterProvider) => {\n                if (typeof routes.default !== \"undefined\" && routes.default !== null) {\n                    $urlRouterProvider.otherwise(routes.default);\n                }\n                for (let [i, route] of Object.keys(routes).entries()) {\n                    if (route === \"default\") { continue; }\n                    $stateProvider.state(route, routes[route]);\n                }\n            });\n        }\n        config(foo) {\n            if (typeof this.module === \"undefinded\" || this.module === null) {\n                throw \"Cannot access module: undefined!\";\n            }\n            this.module.config(foo);\n        }\n    }"]}