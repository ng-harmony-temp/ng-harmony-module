{"version":3,"sources":["../index.js"],"names":[],"mappings":"AAAI,OAAO,OAAP,MAAoB,SAApB;AACA,OAAO,MAAP,MAAmB,eAAnB;;AAEA,OAAO,MAAM,MAAN,CAAa;AAChB,gBAAY,IAAZ,EAAkB,YAAlB,EAAgC,MAAhC,EAAwC;AACpC,aAAK,IAAL,GAAY,IAAZ;AACA,aAAK,YAAL,GAAoB,gBAAgB,EAApC;AACA,aAAK,YAAL,CAAkB,IAAlB,CAAuB,SAAvB;AACA,gBAAQ,MAAR,CAAe,KAAK,IAApB,EAA0B,KAAK,YAA/B;AACA,YAAI,OAAO,MAAP,KAAkB,WAAlB,IAAiC,WAAW,IAAhD,EAAsD;AACrD,iBAAK,OAAL,CAAa,MAAb;AACA;AACJ;AACD,QAAI,MAAJ,GAAa;AACT,eAAO,QAAQ,MAAR,CAAe,KAAK,IAApB,CAAP;AACH;AACD,gBAAY;AACR,gBAAQ,OAAR,CAAgB,QAAhB,EAA0B,KAA1B,CAAgC,MAAM;AAClC,oBAAQ,SAAR,CAAkB,QAAlB,EAA4B,CAAC,KAAK,IAAN,CAA5B;AACH,SAFD;AAGH;AACD,YAAQ,MAAR,EAAgB;AACZ,aAAK,MAAL,GAAc,MAAd;AACA,aAAK,MAAL,CAAa,cAAD,IAAoB;AAC5B,gBAAI,OAAO,OAAO,OAAd,KAA0B,WAA1B,IAAyC,OAAO,OAAP,KAAmB,IAAhE,EAAsE;AAClE,+BAAe,IAAf,CAAoB,GAApB,EAAyB,OAAO,OAAhC;AACA,+BAAe,SAAf,CAAyB,OAAO,OAAhC;AACH;AACD,iBAAK,IAAI,CAAC,CAAD,EAAI,KAAJ,CAAT,IAAuB,OAAO,IAAP,CAAY,MAAZ,EAAoB,OAApB,EAAvB,EAAsD;AAClD,oBAAI,UAAU,SAAd,EAAyB;AAAE;AAAW;AACtC,+BAAe,IAAf,CAAoB,KAApB,EAA2B,OAAO,KAAP,CAA3B;AACH;AACJ,SATD;AAUH;AACD,WAAO,GAAP,EAAY;AACR,YAAI,OAAO,KAAK,MAAZ,KAAuB,YAAvB,IAAuC,KAAK,MAAL,KAAgB,IAA3D,EAAiE;AAC7D,kBAAM,kCAAN;AACH;AACD,aAAK,MAAL,CAAY,MAAZ,CAAmB,GAAnB;AACH;AApCe","file":"amd_module.js","sourcesContent":["    import angular from \"angular\";\n    import router from \"angular-route\";\n\n    export class Module {\n        constructor(name, dependencies, routes) {\n            this.name = name;\n            this.dependencies = dependencies || [];\n            this.dependencies.push(\"ngRoute\");\n            angular.module(this.name, this.dependencies);\n            if (typeof routes !== \"undefined\" && routes !== null) {\n            \tthis.routing(routes);\n            }\n        }\n        get module() {\n            return angular.module(this.name);\n        }\n        bootstrap() {\n            angular.element(document).ready(() => {\n                angular.bootstrap(document, [this.name]);\n            });\n        }\n        routing(routes) {\n            this.routes = routes;\n            this.config(($routeProvider) => {\n                if (typeof routes.default !== \"undefined\" && routes.default !== null) {\n                    $routeProvider.when(\"/\", routes.default);\n                    $routeProvider.otherwise(routes.default);\n                }\n                for (let [i, route] of Object.keys(routes).entries()) {\n                    if (route === \"default\") { continue; }\n                    $routeProvider.when(route, routes[route]);\n                }\n            });\n        }\n        config(foo) {\n            if (typeof this.module === \"undefinded\" || this.module === null) {\n                throw \"Cannot access module: undefined!\";\n            }\n            this.module.config(foo);\n        }\n    }"]}